{"version":3,"sources":["components/Navbar/index.js","components/Navbar/Navbar.js","components/Home/index.js","components/Home/Home.js","store/slices/auth.slice.js","components/Login/Login.js","components/Login/index.js","components/Register/index.js","components/Register/Register.js","untils/customHooks/useCustomForm.js","components/Password/Forgot/ForgotPassword.js","components/Password/Forgot/index.js","components/Password/Reset/ResetPassword.js","components/Password/Reset/index.js","components/Routes/Guest.js","components/common/Avatar/index.js","components/common/Avatar/Avatar.js","components/common/CLink/CLink.js","components/common/CLink/index.js","components/Profile/UserContent/UserContent.js","components/Profile/UserContent/index.js","components/Profile/index.js","components/Profile/Profile.js","components/common/Post/index.js","components/common/Post/Post.js","components/Profile/PostList/index.js","components/Profile/PostList/PostList.js","components/Profile/SavedList/index.js","components/Profile/SavedList/SavedList.js","components/Profile/TaggedList/index.js","components/Profile/TaggedList/TaggedList.js","components/Routes/Members.js","App.js","reportWebVitals.js","config/environment.js","config/axios.js","apis/user.js","store/sagas/getUserInfo.saga.js","config/authentication.js","apis/auth.js","store/sagas/login.saga.js","store/sagas/root.saga.js","store/store.js","index.js","components/Navbar/Navbar.module.scss","components/Home/Home.module.scss"],"names":["Navbar","connect","store","loggedIn","auth","user","className","style","container","to","src","alt","id","firstName","lastName","username","HomePage","authSlice","createSlice","name","initialState","isLoading","loadingUserData","error","accessToken","localStorage","getItem","refreshToken","reducers","login","state","loginSuccess","action","payload","access_token","refresh_token","loginFailed","getUserInfo","getUserInfoSuccess","getUserInfoFailed","actions","actionProps","loginAction","useForm","register","handleSubmit","errors","formState","onSubmit","email","password","length","type","required","placeholder","minLength","maxLength","LoginPage","RegisterPage","useState","isSubmit","setIsSubmit","reset","useEffect","setTimeout","data","alert","JSON","stringify","pattern","value","tabIndex","useCustomForm","schema","resolver","yupResolver","yup","ForgotPasswordPage","console","log","message","Yup","passwordConfirmation","oneOf","ResetPasswordPage","React","setState","query","URLSearchParams","useLocation","search","onKeyDown","e","key","defaultValue","get","onClick","GuestRoutes","path","Forgot","Reset","Avatar","CLink","children","activeClass","props","resolved","useResolvedPath","match","useMatch","pathname","end","defaultProps","UserContent","Profile","useParams","profile","Post","PostList","posts","Array","fill","map","post","index","SavedList","TaggedList","MemberRoutes","element","Guest","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","environments","development","apiUrl","apiEndpoint","basicAuthUser","getEnvironment","env","Error","instance","axios","create","baseURL","headers","Accept","interceptors","request","use","config","a","token","response","originalRequest","warn","status","_retry","setItem","Promise","reject","Api","getUserInfoSaga","call","put","authentication","grantType","clientId","clientSecret","authData","getAuthData","loginSaga","fork","rootSaga","takeLatest","devTool","window","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","configureStore","reducer","authReducer","middleware","run","dispatch","createStore","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.49ba79e4.chunk.js","sourcesContent":["import Navbar from './Navbar'\nexport default Navbar\n","import React from 'react'\nimport pt from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { IoLogIn, IoCheckmarkCircle } from 'react-icons/io5'\nimport style from './Navbar.module.scss'\n\nconst Navbar = ({ loggedIn, user }) => {\n  return (\n    <nav className={`navbar is-transparent ${style.container}`}>\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link to=\"/\" className=\"navbar-item is-logo\">\n            <img src=\"/logo.svg\" alt=\"People logo\" />\n          </Link>\n          <div\n            className=\"navbar-burger\"\n            data-target=\"navbarExampleTransparentExample\"\n          >\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </div>\n\n        <div id=\"navbarExampleTransparentExample\" className=\"navbar-menu\">\n          <div className=\"navbar-end\">\n            {loggedIn ? (\n              <div className=\"navbar-item has-dropdown is-hoverable\">\n                <a className=\"navbar-link\">\n                  Hi {`${user.firstName} ${user.lastName}`}\n                </a>\n\n                <div className=\"navbar-dropdown is-right\">\n                  <Link className=\"navbar-item\" to={user.username}>\n                    Profile\n                  </Link>\n                  <a className=\"navbar-item\">Setting</a>\n                  <a className=\"navbar-item\">Support</a>\n                  <hr className=\"navbar-divider\" />\n                  <a className=\"navbar-item\">Logout</a>\n                </div>\n              </div>\n            ) : (\n              <div className=\"navbar-item\">\n                <div className=\"field is-grouped\">\n                  <p className=\"control\">\n                    <Link className=\"bd-tw-button button\" to=\"/login\">\n                      <span className=\"icon\">\n                        <IoLogIn />\n                      </span>\n                      <span>Login</span>\n                    </Link>\n                  </p>\n                  <p className=\"control\">\n                    <Link className=\"button is-primary\" to=\"/register\">\n                      <span className=\"icon\">\n                        <IoCheckmarkCircle />\n                      </span>\n                      <span>Register</span>\n                    </Link>\n                  </p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nNavbar.propTypes = {\n  loggedIn: pt.bool,\n  user: pt.object,\n}\n\nconst mapStoreToProps = (store) => ({\n  loggedIn: store.auth.loggedIn,\n  user: store.auth.user,\n})\n\nexport default connect(mapStoreToProps)(Navbar)\n","import HomePage from './Home'\nexport default HomePage\n","import React from 'react'\nimport style from './Home.module.scss'\n\nconst HomePage = () => {\n  return <div className={style.container}>Home Page</div>\n}\n\nexport default HomePage\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    isLoading: false,\n    loadingUserData: false,\n    loggedIn: false,\n    error: null,\n    user: null,\n    accessToken: localStorage.getItem('access_token'),\n    refreshToken: localStorage.getItem('refresh_token'),\n  },\n  reducers: {\n    login: (state) => {\n      state.isLoading = true\n    },\n    loginSuccess: (state, action) => {\n      const { access_token, refresh_token } = action.payload\n      state.isLoading = false\n      state.accessToken = access_token\n      state.refreshToken = refresh_token\n    },\n    loginFailed: (state, action) => {\n      state.isLoading = false\n      state.error = action.payload\n    },\n    getUserInfo: (state) => {\n      state.loadingUserData = true\n    },\n    getUserInfoSuccess: (state, action) => {\n      state.loadingUserData = false\n      state.loggedIn = true\n      state.user = action.payload\n    },\n    getUserInfoFailed: (state, action) => {\n      state.loadingUserData = false\n      state.error = action.payload\n    },\n  },\n})\n\nexport const {\n  login,\n  loginSuccess,\n  loginFailed,\n  getUserInfo,\n  getUserInfoSuccess,\n  getUserInfoFailed,\n} = authSlice.actions\nexport default authSlice.reducer\n","import React from 'react'\nimport { useForm } from 'react-hook-form';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport pt from 'prop-types'\nimport {login} from '../../store/slices/auth.slice';\n\nconst LoginPage = ({loginAction, isLoading}) => {\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = ({email, password}) => {\n    if (errors.length) {\n      return\n    }\n    loginAction({email, password})\n  };\n\n  return (\n    // container\n    <div className=\"login__container\">\n      {/*form*/}\n      <form className=\"login__container__form box\" onSubmit={handleSubmit(onSubmit)}>\n        {/*header*/}\n        <div className=\"login__container__form__header\">\n          <span className=\"is-size-3\">LOGIN</span>\n          <div className='my-3'/>\n        </div>\n\n        {/*content*/}\n        <div className=\"login__container__form__content\">\n          {/*2 field input*/}\n          <div className=\"field my-4\">\n            <div className=\"control\">\n              <input className={`input ${errors.email && 'is-danger'}`} type=\"text\"\n                {...register('email',  { required: true })}\n                placeholder=\"Username\" />\n            </div>\n          </div>\n          <div className=\"field mt-4\">\n            <div className=\"control\">\n              <input className={`input ${errors.password && 'is-danger'}`} type=\"password\"\n                {...register('password', { required: true, minLength: 8, maxLength: 60 })}\n                placeholder=\"Password\" />\n            </div>\n          </div>\n\n          {/*remember and forgot*/}\n          <div className='is-flex is-justify-content-space-between mb-5'>\n            <label className=\"checkbox is-flex is-align-items-center\">\n              <input type=\"checkbox\"/>\n              &nbsp;Remember me\n            </label>\n            <Link to='/forgot' className='is-info' >Forgot</Link>\n          </div>\n        </div>\n\n        <div className=\"login__container__form__footer\">\n          {/*button*/}\n          <button type=\"submit\" className={\n            `button is-primary is-fullwidth is-medium is-info ${isLoading && 'is-loading'}`\n          }>\n            Sign in</button>\n        </div>\n\n      </form>\n    </div>\n  )\n\n}\n\nLoginPage.propTypes = {\n  isLoading: pt.bool,\n  loginAction: pt.func\n}\n\nconst mapStoreToProps = (store) => ({\n  isLoading: store.auth.isLoading\n})\n\nconst actionProps = {\n  loginAction: login\n}\n\nexport default connect(mapStoreToProps, actionProps)(LoginPage)\n","import LoginPage from './Login'\nimport './Login.scss';\nexport default LoginPage\n","import RegisterPage from './Register'\nexport default RegisterPage\n","import React, { useState, useEffect } from 'react'\nimport { useForm } from 'react-hook-form';\nimport { IoMail, IoKey, IoPeople } from 'react-icons/io5'\n\nconst RegisterPage = () => {\n  const [isSubmit, setIsSubmit] = useState(false);\n  const { register, handleSubmit, reset, formState: { errors } } = useForm();\n  const onSubmit = data => {\n    setIsSubmit(true);\n    alert(JSON.stringify(data));\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      reset({\n        email: '',\n        username: '',\n        password: ''\n      });\n      setIsSubmit(false);\n    }, 1500);\n  }, [reset, isSubmit])\n\n  return (\n    <div className=\"columns is-centered\">\n      <div className=\"is-vertically-centered column is-5\">\n        <div className=\"container interactive is-flex-direction-column is-justify-content-center is-flex p-6 mt-6 box\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"field\">\n              <label className=\"label\">Email <span className=\"has-text-danger-dark\">*</span></label>\n              <div className=\"control has-icons-left\">\n                <input className=\"input\" type=\"text\" placeholder=\"Email\" name=\"email\" \n                  {...register('email', { \n                    required: true,\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    }\n                  })}/>\n                <span className=\"icon is-left\">\n                  <IoMail />\n                </span>\n                {errors.email && errors.email.type === 'required' && <span className=\"has-text-danger-dark\">This is required</span>}\n                {errors.email && errors.email.type === 'pattern' && <span className=\"has-text-danger-dark\">Invalid email address</span>}\n              </div>\n            </div>\n            <div className=\"field\">\n              <label className=\"label\">Username <span className=\"has-text-danger-dark\">*</span></label>\n              <div className=\"control has-icons-left\">\n                <input \n                  className=\"input\" type=\"text\" placeholder=\"Username\" name=\"username\" {...register('username', { \n                    required: true,\n                    minLength: 5, \n                    maxLength: 20\n                  })}/>\n                <span className=\"icon is-left\">\n                  <IoPeople />\n                </span>\n                {errors.username && errors.username.type === 'required' && <span className=\"has-text-danger-dark\">This is required</span>}\n                {errors.username && errors.username.type === 'minLength' && <span className=\"has-text-danger-dark\">Min length exceeded</span> }\n                {errors.username && errors.username.type === 'maxLength' && <span className=\"has-text-danger-dark\">Max length exceeded</span> }\n              </div>\n            </div>\n            <div className=\"field\">\n              <label className=\"label\">Password <span className=\"has-text-danger-dark\">*</span></label>\n              <div className=\"control has-icons-left\">\n                <input className=\"input\" type=\"password\" placeholder=\"Password\" name=\"password\" \n                  {...register('password', {\n                    required: true,\n                  })}\n                />\n                <span className=\"icon is-left\">\n                  <IoKey />\n                </span>\n              </div>\n              {errors.password && errors.password.type === 'required' && <span className=\"has-text-danger-dark\">This is required</span>}\n            </div>\n\n            <div className=\"buttons\">\n              <button \n                className={`is-primary is-rounded is-fullwidth button ${isSubmit ? 'is-loading' : ''}`}\n                tabIndex=\"0\" type=\"submit\"\n              >\n                                Register\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default RegisterPage\n","import { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nexport const useCustomForm = (schema) => {\n  return useForm({ resolver: yupResolver(schema) })\n}\n","import React from 'react'\nimport { IoMail } from 'react-icons/io5'\nimport * as yup from 'yup'\nimport { useCustomForm } from '../../../untils/customHooks/useCustomForm'\n\nconst schema = yup\n  .object({\n    email: yup.string().email().required(),\n  })\n  .required()\n\nconst ForgotPasswordPage = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useCustomForm(schema)\n\n  const onSubmit = (data) => {\n    console.log(data)\n  }\n\n  return (\n    <div className=\"ForgotPassword__Container\">\n      <div className=\"columns is-centered\">\n        <div className=\"is-vertically-centered column is-5\">\n          <div className=\"container interactive is-flex-direction-column is-justify-content-center is-flex p-6 mt-6 box\">\n            <h1 className=\"title is-4 is-horizontaly-centered\">\n                            Forgot password\n            </h1>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"field\">\n                <label className=\"label\">\n                                    Enter your email\n                </label>\n                <div className=\"control has-icons-left\">\n                  <input\n                    className={`input ${\n                      errors.email ? 'is-danger' : ''\n                    }`}\n                    placeholder=\"Email\"\n                    {...register('email')}\n                  />\n                  <span className=\"icon is-left\">\n                    <IoMail />\n                  </span>\n                </div>\n                {errors.email && (\n                  <p className=\"help is-danger\">\n                    {errors.email.message}\n                  </p>\n                )}\n              </div>\n              <div className=\"field\">\n                <button\n                  type=\"submit\"\n                  className=\"is-primary is-rounded is-fullwidth button\"\n                >\n                                    Send email to reset password\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ForgotPasswordPage\n","import ForgotPasswordPage from './ForgotPassword'\nexport default ForgotPasswordPage\n","import React from 'react';\nimport { MdPassword } from 'react-icons/md'\n\nimport { useLocation } from 'react-router-dom';\n\nimport * as Yup from 'yup'\nimport { useCustomForm } from '../../../untils/customHooks/useCustomForm'\n\nconst schema = Yup\n  .object({\n    password: Yup.string().required('Password is required'),\n    passwordConfirmation: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n  })\n  .required()\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst ResetPasswordPage = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useCustomForm(schema)\n\n  const [state, setState] = React.useState(false);\n  const query = useQuery();\n\n  const handleEnter = (e)=>{\n    if(e.key==='Enter'){\n      handleSubmit(onSubmit);\n    }\n  }\n\n  const onSubmit = data => {\n    console.log(data);\n    setState(true);\n  };\n\n\n  return (\n    // container\n    <div className=\"resetPassword__container\">\n      {/*form*/}\n      <form className=\"resetPassword__container__form box\" onKeyDown={handleEnter}>\n        {/*header*/}\n        <div className=\"resetPassword__container__form__header\">\n          <span className=\"is-size-3\">LOGIN</span>\n          <div className='my-3'/>\n        </div>\n        {/*content*/}\n        <div className=\"resetPassword__container__form__content\">\n          {/*hidden field*/}\n          <input type=\"hidden\" {...register('token')} defaultValue={query.get('token')}/>\n          {/*2 field input*/}\n          <div className=\"field my-4\">\n            <label className=\"label\">\n              Enter your email\n            </label>\n\n            <div className=\"control has-icons-left\">\n              <input className={`input ${errors.password && 'is-danger'}`} type=\"password\"\n                {...register('password')}\n                placeholder=\"\" />\n              <span className=\"icon is-left\">\n                <MdPassword />\n              </span>\n            </div>\n            {errors.password && (\n              <p className=\"help is-danger\">\n                {errors.password.message}\n              </p>\n            )}\n          </div>\n          <div className=\"field mt-4\">\n            <div className=\"control has-icons-left\">\n              <input className={`input ${errors.passwordConfirmation && 'is-danger'}`} type=\"password\"\n                {...register('passwordConfirmation')}\n                placeholder=\"\" />\n              <span className=\"icon is-left\">\n                <MdPassword />\n              </span>\n            </div>\n            {errors.passwordConfirmation && (\n              <p className=\"help is-danger\">\n                {errors.passwordConfirmation.message}\n              </p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"resetPassword__container__form__footer mt-5\">\n          {/*button*/}\n          <button className={\n            `button is-primary is-fullwidth is-medium is-info ${state && 'is-loading'}`\n          }\n          onClick={handleSubmit(onSubmit)}>\n            Sign in</button>\n        </div>\n\n      </form>\n    </div>\n  )\n}\n\nexport default ResetPasswordPage;\n","import ResetPasswordPage from './ResetPassword';\nimport './style.scss';\nexport default ResetPasswordPage;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom'\n\nimport HomePage from '../Home'\nimport LoginPage from '../Login'\nimport RegisterPage from '../Register'\nimport ForgotPasswordPage from '../Password/Forgot'\nimport ResetPasswordPage from '../Password/Reset';\n\nconst GuestRoutes = () => {\n  return (\n    <Routes>\n      <Route path=\"/register\">\n        <RegisterPage />\n      </Route>\n      <Route path=\"/password/forgot\">\n        <ForgotPasswordPage />\n      </Route>\n      <Route path=\"/password/reset\">\n        <ResetPasswordPage />\n      </Route>\n      <Route path=\"/login\">\n        <LoginPage />\n      </Route>\n      <Route path=\"/\">\n        <HomePage />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default GuestRoutes","import Avatar from './Avatar'\nexport default Avatar\n","import React from 'react'\n\nconst Avatar = () => {\n  return (\n    <figure className=\"image is-128x128\">\n      <img\n        className=\"is-rounded\"\n        src=\"https://bulma.io/images/placeholders/128x128.png\"\n      />\n    </figure>\n  )\n}\n\nexport default Avatar\n","import React from 'react'\nimport pt from 'prop-types'\nimport { Link, useMatch, useResolvedPath } from 'react-router-dom'\n\nconst CLink = ({ children, to, activeClass, ...props }) => {\n  let resolved = useResolvedPath(to)\n  let match = useMatch({ path: resolved.pathname, end: true })\n\n  return (\n    <Link className={match ? activeClass : ''} to={to} {...props}>\n      {children}\n    </Link>\n  )\n}\n\nCLink.propTypes = {\n  activeClass: pt.string,\n  children: pt.any,\n  to: pt.string,\n}\n\nCLink.defaultProps = {\n  activeClass: '',\n}\n\nexport default CLink\n","import CLink from './CLink'\nexport default CLink\n","import React from 'react'\nimport { Outlet } from 'react-router-dom'\nimport CLink from '../../common/CLink'\n\nconst UserContent = () => {\n  return (\n    <section className=\"section pl-0 pr-0\">\n      <div className=\"tabs\">\n        <ul>\n          <li>\n            <CLink to=\"posts\" activeClass={'is-active'}>\n              POSTS\n            </CLink>\n          </li>\n          <li>\n            <CLink to=\"saved\" activeClass={'is-active'}>\n              SAVED\n            </CLink>\n          </li>\n          <li>\n            <CLink to=\"tagged\" activeClass={'is-active'}>\n              TAGGED\n            </CLink>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </section>\n  )\n}\n\nexport default UserContent\n","import UserContent from './UserContent'\nimport './UserContent.scss'\nexport default UserContent\n","import Profile from './Profile'\nexport default Profile\n","import React from 'react'\nimport pt from 'prop-types'\nimport { connect } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport Avatar from '../common/Avatar'\nimport UserContent from './UserContent'\n\nconst Profile = ({ user }) => {\n  const { username } = useParams()\n  const profile = user.username === username ? user : {}\n  return (\n    <div className=\"container\">\n      <section className=\"hero mt-4\">\n        <div className=\"columns\">\n          <div className=\"column is-2\">\n            <Avatar />\n          </div>\n          <div className=\"column is-flex is-flex-direction-column is-justify-content-center\">\n            <p className=\"title\">{profile.firstName} {profile.lastName}</p>\n            <p className=\"subtitle\">@{profile.username}</p>\n          </div>\n        </div>\n      </section>\n      <UserContent />\n    </div>\n  )\n}\n\nProfile.propTypes = {\n  user: pt.object,\n}\n\nconst mapStoreToProps = (store) => ({\n  user: store.auth.user,\n})\n\nexport default connect(mapStoreToProps)(Profile)\n","import Post from './Post'\nexport default Post\n","import React from 'react'\nimport pt from 'prop-types'\n\nconst Post = ({ user }) => {\n  return (\n    <article className=\"media\">\n      <figure className=\"media-left\">\n        <p className=\"image is-64x64\">\n          <img\n            className=\"is-rounded\"\n            src=\"https://bulma.io/images/placeholders/128x128.png\"\n          />\n        </p>\n      </figure>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          <p>\n            <strong>\n              {user?.firstName} {user?.lastName}\n            </strong>{' '}\n            <small>@{user?.username}</small> <small>31m</small>\n            <br />\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin\n            ornare magna eros, eu pellentesque tortor vestibulum ut. Maecenas\n            non massa sem. Etiam finibus odio quis feugiat facilisis.\n          </p>\n        </div>\n        <nav className=\"level is-mobile\">\n          <div className=\"level-left\">\n            <a className=\"level-item\">\n              <span className=\"icon is-small\">\n                <i className=\"fas fa-reply\"></i>\n              </span>\n            </a>\n            <a className=\"level-item\">\n              <span className=\"icon is-small\">\n                <i className=\"fas fa-retweet\"></i>\n              </span>\n            </a>\n            <a className=\"level-item\">\n              <span className=\"icon is-small\">\n                <i className=\"fas fa-heart\"></i>\n              </span>\n            </a>\n          </div>\n        </nav>\n      </div>\n    </article>\n  )\n}\n\nPost.propTypes = {\n  user: pt.object,\n}\n\nexport default Post\n","import PostList from './PostList'\nexport default PostList\n","import React from 'react'\nimport pt from 'prop-types'\nimport { connect } from 'react-redux'\nimport Post from '../../common/Post'\n\nconst PostList = ({ user }) => {\n  const posts = Array(15).fill(user)\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-8\">\n        {posts.map((post, index) => (\n          <div key={user.id + index}>\n            <Post user={post} />\n          </div>\n        ))}\n      </div>\n      <div className=\"column is-4\">Right</div>\n    </div>\n  )\n}\n\nPostList.propTypes = {\n  user: pt.object,\n}\n\nconst mapStoreToProps = (store) => ({\n  user: store.auth.user,\n})\n\nexport default connect(mapStoreToProps)(PostList)\n","import SavedList from './SavedList'\nexport default SavedList\n","import React from 'react'\n\nconst SavedList = () => {\n  return <div>Saved list</div>\n}\n\nexport default SavedList\n","import TaggedList from './TaggedList'\nexport default TaggedList\n","import React from 'react'\n\nconst TaggedList = () => {\n  return <div>Tagged list</div>\n}\n\nexport default TaggedList\n","import React from 'react'\nimport { Route, Routes } from 'react-router-dom'\n\nimport HomePage from '../Home'\nimport Profile from '../Profile'\nimport PostList from '../Profile/PostList'\nimport SavedList from '../Profile/SavedList'\nimport TaggedList from '../Profile/TaggedList'\n\nconst MemberRoutes = () => {\n  return (\n    <Routes path=\"/\">\n      <Route index element={<HomePage />} />\n      <Route path=\"/:username\" element={<Profile />}>\n        <Route path=\"posts\" element={<PostList />} />\n        <Route path=\"saved\" element={<SavedList />} />\n        <Route path=\"tagged\" element={<TaggedList />} />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default MemberRoutes\n","import { connect } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport pt from 'prop-types'\nimport Navbar from './components/Navbar'\nimport GuestRoutes from './components/Routes/Guest'\nimport MemberRoutes from './components/Routes/Members'\n\nfunction App({ loggedIn, isLoading }) {\n  if (isLoading) {\n    return <div className=\"fullscreen__loading\">Loading</div>\n  }\n  return (\n    <Router>\n      <div>\n        <Navbar />\n      </div>\n      <div className=\"app-content\">\n        {!loggedIn ? <GuestRoutes /> : <MemberRoutes />}\n      </div>\n    </Router>\n  )\n}\n\nApp.propTypes = {\n  loggedIn: pt.bool,\n  isLoading: pt.bool,\n}\n\nconst mapStoreToProps = (store) => ({\n  loggedIn: store.auth.loggedIn,\n  isLoading: store.auth.loadingUserData,\n})\n\nexport default connect(mapStoreToProps)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const environments = {\n  development: {\n    apiUrl: 'http://cc220e9dfab7.sn.mynetname.net:9000/',\n    apiEndpoint: '',\n    basicAuthUser: {\n      username: 'people-user',\n      password: 'people-secret'\n    }\n  },\n}\n\nconst getEnvironment = (env) => {\n  if (!environments[env]) {\n    throw new Error(`Environment name \"${env}\" is not define.`)\n  }\n  return environments[env]\n}\n\nexport default getEnvironment\n","import axios from 'axios'\nimport getEnvironment from './environment'\n\nconst env = getEnvironment('development')\n\nconst instance = axios.create({\n  baseURL: env.apiUrl + env.apiEndpoint,\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'Cache-Control': 'no-cache',\n  },\n})\n\nconst refreshToken = (refreshToken) =>\n  instance.post('/auth/refresh-token', { refreshToken })\n\ninstance.interceptors.request.use(async (config) => {\n  const token = localStorage.getItem('access_token')\n  if (token) {\n    config.headers['Authorization'] = 'Bearer ' + token\n  }\n  return config\n})\n\ninstance.interceptors.response.use(\n  async (response) => response.data,\n  async (error) => {\n    const originalRequest = error.config\n    console.warn('Error status', error.response.status)\n    if (error.response.status === 403 && !originalRequest._retry) {\n      originalRequest._retry = true\n      const token = localStorage.getItem('refresh_token')\n      const { access_token, refresh_token } = await refreshToken(token)\n      localStorage.setItem('access_token', access_token)\n      localStorage.setItem('refresh_token', refresh_token)\n      originalRequest.headers['Authorization'] = 'Bearer ' + access_token\n      return instance(originalRequest)\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default instance\n","import Api from '../config/axios'\n\nexport const getUser = (id) => {\n  return Api.get('users/' + id)\n}\n\nexport const getUserInfo = () => {\n  return Api.get('users/info')\n}\n\nexport default {\n  getUser,\n  getUserInfo\n}","import { call, put } from '@redux-saga/core/effects'\nimport user from '../../apis/user'\nimport { getUserInfoFailed, getUserInfoSuccess } from '../slices/auth.slice'\n\nfunction* getUserInfoSaga() {\n  try {\n    const response = yield call(user.getUserInfo)\n    yield put(getUserInfoSuccess(response.data))\n  } catch (e) {\n    yield put(getUserInfoFailed(e))\n  }\n}\n\nexport default getUserInfoSaga\n","const authentication = {\n  grantType: 'password',\n  username: '',\n  password: '',\n  clientId: 'people-auth-client',\n  clientSecret: '3cc6b641-b64d-4d12-bace-d15b194ef58a',\n}\n\nexport const getAuthData = (username, password) => ({\n  ...authentication,\n  username,\n  password,\n})","import { getAuthData } from '../config/authentication'\nimport Api from '../config/axios'\n\nexport const login = ({email, password}) => {\n  const authData = getAuthData(email, password)\n  return Api.post('auth/login', authData)\n}\n\nexport default {\n  login\n}","import { call, put, fork } from '@redux-saga/core/effects'\nimport { loginSuccess, loginFailed } from '../slices/auth.slice'\nimport auth from '../../apis/auth'\nimport getUserInfoSaga from './getUserInfo.saga'\n\nfunction* loginSaga(action) {\n  console.log('Login: ', action)\n  try {\n    const { email, password } = action.payload\n    const response = yield call(auth.login, { email, password })\n\n    localStorage.setItem('access_token', response.access_token)\n    localStorage.setItem('refresh_token', response.refresh_token)\n\n    yield put(loginSuccess(response))\n\n    yield fork(getUserInfoSaga)\n  } catch (e) {\n    console.log('Login failed: ', e)\n    yield put(loginFailed(e))\n  }\n}\n\nexport default loginSaga\n","import { takeLatest } from 'redux-saga/effects'\nimport getUserInfoSaga from './getUserInfo.saga'\nimport loginSaga from './login.saga'\n\nfunction* rootSaga() {\n  yield takeLatest('auth/login', loginSaga)\n  yield takeLatest('auth/getUserInfo', getUserInfoSaga)\n}\n\nexport default rootSaga\n","import { configureStore } from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootSaga from './sagas/root.saga'\nimport authReducer, { getUserInfo } from './slices/auth.slice'\n\nconst devTool =\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nconst createStore = () => {\n  const sagaMiddleware = createSagaMiddleware()\n  const store = configureStore(\n    {\n      reducer: {\n        auth: authReducer,\n      },\n      middleware: [sagaMiddleware],\n    },\n    devTool\n  )\n  sagaMiddleware.run(rootSaga)\n  store.dispatch(getUserInfo())\n  return store\n}\n\nexport default createStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './theme/index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport createStore from './store'\n\nconst store = createStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__Stw5O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3HKK4\"};"],"sourceRoot":""}